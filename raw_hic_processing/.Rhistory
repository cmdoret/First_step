matrix(c(1,2,3,4),ncol=2)
matrix(c(1,2,3,4),c(5,6,7,8),ncol=2)
matrix(c(c(1,2,3,4),c(5,6,7,8)),ncol=2)
set1 <-matrix(c(c(1,2,3,4),c(5,6,7,8)),ncol=2)
set2 <-matrix(c(c(6),c(8)),ncol=2)
set2
rownames(set1) <- letters()[1:4]
rownames(set1) <- letter()[1:4]
rownames(set1) <- letters[1:4]
set1
over <-interval_overlap(set1,set2)
library(intervals)
install.packages("intervals")
install.packages("intervals")
library(intervals)
set1 <- Intervals(set1)
set2 <- Intervals(set2)
over <-interval_overlap(set1,set2)
over
set2
set1
names(unlist(over[over!=0]))
testmat <- list(matrix(rep(0,100),nrow=10),"1")
for(i in 1:10){testmat[[1]][i,i] <- 1}
for(i in 5:7){testmat[[1]][4,i]<-1}
for(i in 6:7){testmat[[1]][5,i]<-1}
testmat[[1]][6,7]<-1
diam_slide<-function(m,R=5000, D=100000){
M <- m
diam <- rep(0,length(M[1,])) # preallocating space for diamond-summed data.
diam[(D/R+1):(length(M[1,])-(D/R))] <- sapply(X = seq(D/R+1,(length(M[1,])-(D/R))),
simplify = T, FUN= function(d){
sum(M[d:(d-(D/R-1)),d:(d+(D/R-1))])})
return(diam)
}
diam_slide(testmat)
diam_slide(testmat[[1]])
testmat
diam_slide(testmat[["1"]])
diam_slide(testmat[[1]])
diam_slide(testmat[[1]])
diam_slide<-function(m,R=5000, D=100000){
M <- m
diam <- rep(0,length(M[1,])) # preallocating space for diamond-summed data.
diam[(D/R+1):(length(M[1,])-(D/R))] <- sapply(X = seq(D/R,(length(M[1,])-(D/R))),
simplify = T, FUN= function(d){
sum(M[d:(d-(D/R-1)),d:(d+(D/R-1))])})
return(diam)
}
diam_slide(testmat[[1]])
diam_slide<-function(m,R=5000, D=100000){
M <- m
diam <- rep(0,length(M[1,])) # preallocating space for diamond-summed data.
diam[(D/R+1):(length(M[1,])-(D/R))] <- sapply(X = seq(D/R,(length(M[1,])-(D/R))),
simplify = T, FUN= function(d){
sum(M[d:(d-(D/R-1)),d:(d+(D/R))])})
return(diam)
}
diam_slide<-function(m,R=5000, D=100000){
M <- m
diam <- rep(0,length(M[1,])) # preallocating space for diamond-summed data.
diam[(D/R+1):(length(M[1,])-(D/R))] <- sapply(X = seq(D/R,(length(M[1,])-(D/R))),
simplify = T, FUN= function(d){
sum(M[d:(d-(D/R-1)),d:(d+(D/R))])})
return(diam)
}
diam_slide(testmat[[1]])
seq(4,(16)-(4)))
seq(4,(16)-(4))
seq(4,16-(4-1)))
seq(4,16-(4-1))
diam_slide<-function(m,R=5000, D=100000){
M <- m
diam <- rep(0,length(M[1,])) # preallocating space for diamond-summed data.
diam[(D/R+1):(length(M[1,])-(D/R))] <- sapply(X = seq(D/R,(length(M[1,])-(D/R-1))),
simplify = T, FUN= function(d){
sum(M[d:(d-(D/R-1)),d:(d+(D/R))])})
return(diam)
}
diam_slide(testmat[[1]],R=1,D=4)
testmat[[|]]
testmat[[1]]
diam_slide(testmat[[1]],R=1,D=2)
testmat[1:(1-(4-1)),1:(1+(4))]
testmat[[1]][1:(1-(4-1)),1:(1+(4))]
[1:(1-(4-1)),1:(1+(4))]
1:(1-(4-1)),1:(1+(4))]
1:(1-(4-1)),1:(1+(4))
c(1:(1+(4)))
c(1:(1-(4-1)))
c(2:(2-(4-1)))
c(3:(3-(4-1)))
c(4:(4-(4-1)))
diam_slide<-function(m,R=5000, D=100000){
M <- m
diam <- rep(0,length(M[1,])) # preallocating space for diamond-summed data.
print(diam)
diam[(D/R+1):(length(M[1,])-(D/R))] <- sapply(X = seq(D/R,(length(M[1,])-(D/R-1))),
simplify = T, FUN= function(d){
sum(M[d:(d-(D/R-1)),d:(d+(D/R))])})
return(diam)
}
diam_slide(testmat[[1]],R=1,D=4)
diam_slide<-function(m,R=5000, D=100000){
M <- m
diam <- rep(0,length(M[1,])) # preallocating space for diamond-summed data.
diam[(D/R+1):(length(M[1,])-(D/R))] <- sapply(X = seq(D/R,(length(M[1,])-(D/R-1))),
simplify = T, FUN= function(d){print(d);
sum(M[d:(d-(D/R-1)),d:(d+(D/R))])})
return(diam)
}
diam_slide(testmat[[1]],R=1,D=4)
diam_slide<-function(m,R=5000, D=100000){
M <- m
diam <- rep(0,length(M[1,])) # preallocating space for diamond-summed data.
diam[(D/R+1):(length(M[1,])-(D/R))] <- sapply(X = seq(D/R,(length(M[1,])-(D/R-1))),
simplify = T, FUN= function(d){print(d);
sum(M[(d-(D/R-1)):d,d:(d+(D/R))])})
return(diam)
}
diam_slide(testmat[[1]],R=1,D=4)
testmat[[1]][1:(1-(4-1)),1:(1+(4))]
testmat[[1]][1:(4-(4-1)),4:(4+(4))]
testmat[[1]][4:(4-(4-1)),4:(4+(4))]
testmat[[1]][4:(4-(4-1)),4:(4+(4))]
diam_slide<-function(m,R=5000, D=100000){
M <- m
diam <- rep(0,length(M[1,])) # preallocating space for diamond-summed data.
diam[(D/R+1):(length(M[1,])-(D/R))] <- sapply(X = seq(D/R,(length(M[1,])-(D/R-1))),
simplify = T, FUN= function(d){
sum(M[d:(d-(D/R-1)),d:(d+(D/R-1))])})
return(diam)
}
diam_slide(testmat[[1]],R=1,D=4)
c((4+1):(10-(4)))
diam_slide<-function(m,R=5000, D=100000){
M <- m
diam <- rep(0,length(M[1,])) # preallocating space for diamond-summed data.
diam[(D/R+1):(length(M[1,])-(D/R))] <- sapply(X = seq(D/R,(length(M[1,])-(D/R-1))),
simplify = T, FUN= function(d){
sum(M[d:(d-(D/R-1)),d:(d+(D/R-1))])})
print(sapply(X = seq(D/R,(length(M[1,])-(D/R-1))),
simplify = T, FUN= function(d){
sum(M[d:(d-(D/R-1)),d:(d+(D/R-1))])}))
return(diam)
}
diam_slide(testmat[[1]],R=1,D=4)
diam_slide<-function(m,R=5000, D=100000){
M <- m
diam <- rep(0,length(M[1,])) # preallocating space for diamond-summed data.
diam[(D/R):(length(M[1,])-(D/R-1))] <- sapply(X = seq(D/R,(length(M[1,])-(D/R-1))),
simplify = T, FUN= function(d){
sum(M[d:(d-(D/R-1)),d:(d+(D/R-1))])})
return(diam)
}
diam_slide(testmat[[1]],R=1,D=4)
diam_slide<-function(m,R=5000, D=100000){
M <- m
diam <- rep(0,length(M[1,])) # preallocating space for diamond-summed data.
diam[(D/R):(length(M[1,])-(D/R-1))] <- sapply(X = seq(D/R,(length(M[1,])-(D/R-1))),
simplify = T, FUN= function(d){print(d);
sum(M[d:(d-(D/R-1)),d:(d+(D/R-1))])})
return(diam)
}
diam_slide(testmat[[1]],R=1,D=4)
